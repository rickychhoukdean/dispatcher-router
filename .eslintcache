[{"/home/ricky/Projects/dispatcher-router/src/index.js":"1","/home/ricky/Projects/dispatcher-router/src/reportWebVitals.js":"2","/home/ricky/Projects/dispatcher-router/src/App.js":"3","/home/ricky/Projects/dispatcher-router/src/reducers/index.js":"4","/home/ricky/Projects/dispatcher-router/src/reducers/movements.js":"5","/home/ricky/Projects/dispatcher-router/src/actions/index.js":"6","/home/ricky/Projects/dispatcher-router/src/reducers/driverRoute.js":"7","/home/ricky/Projects/dispatcher-router/src/components/MovementList.js":"8","/home/ricky/Projects/dispatcher-router/src/components/NavBar.js":"9","/home/ricky/Projects/dispatcher-router/src/components/MovementForm.js":"10","/home/ricky/Projects/dispatcher-router/src/components/MovementListItem.js":"11","/home/ricky/Projects/dispatcher-router/src/helpers/index.js":"12","/home/ricky/Projects/dispatcher-router/src/components/EditMovementForm.js":"13","/home/ricky/Projects/dispatcher-router/src/reducers/uiState.js":"14","/home/ricky/Projects/dispatcher-router/src/constants/coordinates.js":"15","/home/ricky/Projects/dispatcher-router/src/components/RouteList.js":"16","/home/ricky/Projects/dispatcher-router/src/components/MovementMapView.js":"17","/home/ricky/Projects/dispatcher-router/src/components/RouteMapView.js":"18","/home/ricky/Projects/dispatcher-router/src/helpers/mapHelpers.js":"19"},{"size":812,"mtime":1611032700042,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610814964724,"results":"22","hashOfConfig":"21"},{"size":1054,"mtime":1611432277730,"results":"23","hashOfConfig":"21"},{"size":869,"mtime":1611388020915,"results":"24","hashOfConfig":"21"},{"size":521,"mtime":1611104684099,"results":"25","hashOfConfig":"21"},{"size":1048,"mtime":1611211294150,"results":"26","hashOfConfig":"21"},{"size":194,"mtime":1610869332857,"results":"27","hashOfConfig":"21"},{"size":1251,"mtime":1611432314558,"results":"28","hashOfConfig":"21"},{"size":1749,"mtime":1611432224583,"results":"29","hashOfConfig":"21"},{"size":4402,"mtime":1611370174484,"results":"30","hashOfConfig":"21"},{"size":2416,"mtime":1611371226609,"results":"31","hashOfConfig":"21"},{"size":3381,"mtime":1611278997722,"results":"32","hashOfConfig":"21"},{"size":4785,"mtime":1611370127192,"results":"33","hashOfConfig":"21"},{"size":1036,"mtime":1611211262383,"results":"34","hashOfConfig":"21"},{"size":132,"mtime":1611112158546,"results":"35","hashOfConfig":"21"},{"size":617,"mtime":1611432356921,"results":"36","hashOfConfig":"21"},{"size":710,"mtime":1611432451396,"results":"37","hashOfConfig":"21"},{"size":643,"mtime":1611432432048,"results":"38","hashOfConfig":"21"},{"size":2492,"mtime":1611430462197,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"yyinqn",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ricky/Projects/dispatcher-router/src/index.js",[],["80","81"],"/home/ricky/Projects/dispatcher-router/src/reportWebVitals.js",[],"/home/ricky/Projects/dispatcher-router/src/App.js",[],"/home/ricky/Projects/dispatcher-router/src/reducers/index.js",[],"/home/ricky/Projects/dispatcher-router/src/reducers/movements.js",[],"/home/ricky/Projects/dispatcher-router/src/actions/index.js",[],"/home/ricky/Projects/dispatcher-router/src/reducers/driverRoute.js",[],"/home/ricky/Projects/dispatcher-router/src/components/MovementList.js",[],"/home/ricky/Projects/dispatcher-router/src/components/NavBar.js",[],"/home/ricky/Projects/dispatcher-router/src/components/MovementForm.js",[],"/home/ricky/Projects/dispatcher-router/src/components/MovementListItem.js",[],"/home/ricky/Projects/dispatcher-router/src/helpers/index.js",["82"],"function generateDriverRoute(movements, startingPoint = [0, 0]) {\n  let convertedArray = parseMovementsIntoArray(movements);\n\n  convertedArray.sort((a, b) => {\n    return (\n      euclidianDistance(startingPoint, a[0]) -\n      euclidianDistance(startingPoint, b[0])\n    );\n  });\n\n  // Initialize function\n  const res = [convertedArray[0][0]];\n  convertedArray[0].shift();\n  let min = Infinity;\n  let minIndex = 0;\n  let runner = 0;\n\n  while (convertedArray.length > 0) {\n    let currentPoint = res[res.length - 1];\n    let testPoint = convertedArray[runner][0];\n\n    if (euclidianDistance(currentPoint, testPoint) < min) {\n      min = euclidianDistance(currentPoint, testPoint);\n      minIndex = runner;\n    }\n\n    // Reset runner after loop\n    if (runner === convertedArray.length - 1) {\n      runner = 0;\n      min = Infinity;\n\n      const itemToPush = convertedArray[minIndex].shift();\n\n      if (convertedArray[minIndex].length === 0) {\n        convertedArray.splice(minIndex, 1);\n      }\n\n      if (!compareArray(itemToPush, res[res.length - 1])) {\n        res.push(itemToPush);\n      }\n    } else {\n      runner++;\n    }\n  }\n  return res;\n}\n\nfunction generateBestRoute(movements) {\n  if (movements.length === 0) {\n    return [];\n  }\n\n  let bestRouteArray = [];\n  let min = Infinity;\n  let res;\n  let parsedArray = parseMovementsIntoArray(movements);\n\n  for (const movement of parsedArray) {\n    bestRouteArray.push(generateDriverRoute(movements, movement[0]));\n  }\n\n  for (const route of bestRouteArray) {\n    let sum = 0;\n    for (let i = 0; i < route.length - 1; i++) {\n      sum += euclidianDistance(route[i], route[i + 1]);\n    }\n    if (sum < min) {\n      min = sum;\n      res = route;\n    }\n    sum = 0;\n  }\n\n  return res;\n}\n\nfunction parseMovementsIntoArray(movements) {\n  let convertedArray = [];\n\n  movements.forEach((movement) => {\n    convertedArray.push([\n      Object.values(movement)[0],\n      Object.values(movement)[1],\n    ]);\n  });\n  return convertedArray;\n}\n\nfunction euclidianDistance(start, end) {\n  if (start && end) {\n    return Math.sqrt(\n      Math.pow(start[0] - end[0], 2) + Math.pow(start[1] - end[1], 2)\n    );\n  } else return Infinity;\n}\n// Original route generating function before optimization\nfunction baseGenerateDriverRoute(movements) {\n  if (movements.length === 0) {\n    return [];\n  }\n  let convertedArray = [];\n\n  movements.forEach((movement) => {\n    convertedArray.push(Object.values(movement));\n  });\n\n  let res = [convertedArray[0][0]];\n\n  for (let i = 0; i < convertedArray.length; i++) {\n    if (!compareArray(res[res.length - 1], convertedArray[i][0])) {\n      res.push(convertedArray[i][0]);\n    }\n    if (!compareArray(res[res.length - 1], convertedArray[i][1])) {\n      res.push(convertedArray[i][1]);\n    }\n  }\n  return res;\n}\n\n\nfunction checkValidMovement(movements, newMovement) {\n  return (\n    !duplicateObjectInArray(movements, newMovement) &&\n    !compareArray(newMovement[\"start\"], newMovement[\"end\"])\n  );\n}\nfunction compareArray(a, b) {\n  return a.length === b.length && a.every((v, i) => v === b[i]);\n}\n\nfunction compareObjects(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n\nfunction duplicateObjectInArray(array, obj) {\n  for (let item of array) {\n    if (compareObjects(item, obj)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport {\n  checkValidMovement,\n  generateBestRoute,\n};\n","/home/ricky/Projects/dispatcher-router/src/components/EditMovementForm.js",[],"/home/ricky/Projects/dispatcher-router/src/reducers/uiState.js",[],"/home/ricky/Projects/dispatcher-router/src/constants/coordinates.js",[],"/home/ricky/Projects/dispatcher-router/src/components/RouteList.js",[],"/home/ricky/Projects/dispatcher-router/src/components/MovementMapView.js",[],"/home/ricky/Projects/dispatcher-router/src/components/RouteMapView.js",[],"/home/ricky/Projects/dispatcher-router/src/helpers/mapHelpers.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":97,"column":10,"nodeType":"89","messageId":"90","endLine":97,"endColumn":33},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'baseGenerateDriverRoute' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]